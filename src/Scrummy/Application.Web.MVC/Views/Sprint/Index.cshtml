@model Scrummy.Application.Web.MVC.ViewModels.Sprint.ViewSprintViewModel

@{
    ViewData["Title"] = Model.Name;
}

<input type="hidden" id="deleteMessage" data-value="Are you sure you want to delete @Model.Name?" />
<input type="hidden" id="deleteUrl" data-value="/Sprint/Delete/@Model.Id" />

<div class="row">
    <div class="col-xs-2">
        <h2>Actions</h2> <hr />
        <a asp-action="Edit" class="btn btn-default actionButton" asp-route-id="@Model.Id">Edit</a>
        @if (Model.CanDelete)
        {
            <h3>Delete</h3> <hr />
            <button type="button" class="btn btn-danger actionButton" id="deleteBtn">Delete</button>
        }
    </div>
    <div class="col-xs-10">
        <h2>Sprint - @Model.Name</h2> <hr />
        <div>
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Name)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Name)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Project)
                </dt>
                <dd>
                    <a asp-action="Index" asp-controller="Project" asp-route-id="@Model.Project.Id">@Model.Project.Text</a>
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.StartDate)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.StartDate)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.EndDate)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.EndDate)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Goal)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Goal)
                </dd>
            </dl>
            <h5>Stories</h5>
            <table class="table">
                <tr id="tableHeader">
                    <th>Story</th>
                    <th>To Do</th>
                    <th>In Progress</th>
                    <th>Done</th>
                    <th>Completed</th>
                </tr>
                @foreach (var p in Model.Stories)
                {
                    <tr>
                        <td colspan="4">
                            <a asp-action="Index" asp-controller="WorkTask" asp-route-id="@p.Id">@p.Text (@p.StoryPoints)</a>
                        </td>
                        <td>
                            @p.Completed
                        </td>
                    </tr>
                    foreach (var t in p.Transform())
                    {
                        <tr>
                            <td></td>
                            <td>
                                @if (t.Item1 != null)
                                {
                                    <a asp-action="Index" asp-controller="WorkTask" asp-route-id="@t.Item1.Id">@t.Item1.Text</a>
                                }
                            </td>
                            <td>
                                @if (t.Item2 != null)
                                {
                                    <a asp-action="Index" asp-controller="WorkTask" asp-route-id="@t.Item2.Id">@t.Item2.Text</a>
                                }
                            </td>
                            <td>
                                @if (t.Item3 != null)
                                {
                                    <a asp-action="Index" asp-controller="WorkTask" asp-route-id="@t.Item3.Id">@t.Item3.Text</a>
                                }
                            </td>
                            <td></td>
                        </tr>
                    }
                }
            </table>
        </div>
    </div>
</div>